@page
@attribute [Authorize(Roles = "Administrador")]
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@model GestaoUtilizadoresModel

@{
    ViewData["Title"] = "Utilizadores";
    var users = Model.Users; // Registra Model.Users em uma variável local para facilitar o acesso no JavaScript

}

<link rel="stylesheet" href="~/css/custom-table.css"/>
<h2>@ViewData["Title"]</h2>

<table class="table table-striped">
    <thead>
    <tr>
        <th class="identificador" onclick="sortTable(0)">Nome de Utilizador</th>
        <th class="identificador">Email</th>
        <th class="identificador" onclick="sortTable(2)">Funções</th>
        <td>
            <span class="identificador" data-id="@User.FindFirstValue(ClaimTypes.NameIdentifier)" onclick="editUser('@User.FindFirstValue(ClaimTypes.NameIdentifier)')">Editar</span>
        </td>
        <th class="identificador">Ativar/Desativar</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Users)
    {
        <tr>
            <td>@Html.DisplayFor(model => user.UserName)</td>
            <td>@Html.DisplayFor(model => user.Email)</td>
            <td>
                @foreach (var role in user.Roles)
                {
                    <span class="@($"{role.ToLower()}-color")">@role</span>
                    <br/>
                }
            </td>
            <td>
                <span class="edit-link" onclick="editUser('@user.Id')">Editar</span>
            </td>
            <td>
                Ativar/Desativar
            </td>
        </tr>
    }
    </tbody>
</table>